import java.net.ServerSocket;
import java.net.Socket;
import java.net.InetAddress;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.util.Scanner;
import java.io.IOException;
import java.io.File;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileNotFoundException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.io.*;
import static java.lang.String.valueOf;
public class server {
    public static String servername;
    static ServerSocket serversocket;
 
    public static void main(String[] args)
        {
            try
            {
            Scanner s=new Scanner(System.in);
            System.out.println("enter server name"+" "+"enter port number");
            servername=s.nextLine();
            int portnumber=s.nextInt();
            serversocket=new ServerSocket(portnumber);
            File f = new File("D:\\java work\\"+servername);
            f.mkdir();
             if (!f.exists())
             {
                 f.createNewFile();
             }
             File f1 = new File("D:\\java work\\"+servername+"\\credentials.txt");
             if (!f1.exists())
             {
                 f1.createNewFile();
             }
            System.out.println("server port number :"+portnumber+"\n"+"server name is :"+servername);
             while (true)
            {
                 Socket clientsocket=serversocket.accept();
                 System.out.println("anew client"+clientsocket+"is connected");
                 ClientConnection clientConnecton=new ClientConnection(clientsocket);
                 clientConnecton.start();
            }
            }
            catch(IOException e)    
            {
                 e.printStackTrace();
            }
        }
    
////////////////////////////////////////////////////////////// classs thread 
            static class ClientConnection extends Thread
            {
                Socket clientsocket;
                ClientConnection(Socket clientsocket)
                {
                    this.clientsocket=clientsocket;

                }
                public void run ()
                {
                     try {
                          DataInputStream input=new DataInputStream(clientsocket.getInputStream());
                          DataOutputStream output=new DataOutputStream(clientsocket.getOutputStream());
                          output.writeUTF("server: connected");
                          while (true)
                          {
                           String option=input.readUTF();            /* to choose login or register or quite */
                              if (option.equalsIgnoreCase("login")) /* login option  start  */
                              {
                                  String user=input.readUTF();
                                  String password=input.readUTF();
                                 try {
                                    File myObj = new File("D:\\java work\\"+servername+"\\credentials.txt");
                                    Scanner myReader = new Scanner(myObj);
                                    while (myReader.hasNextLine()) {
                                    String data = myReader.nextLine();
                                    if (data.equalsIgnoreCase("user name: "+user+" "+"password: "+password))
                                    {
                                      output.writeUTF("login successfully");
                                    }
                                    }
                                    myReader.close();
                                    } catch (FileNotFoundException e) {
                                    System.out.println("wrong email or password");
                                  }
                                   String mail=input.readUTF(); //////recive send or quite
                                    while (mail.equalsIgnoreCase("send"))
                                    {
                                    System.out.println(input.readUTF());///////// to recive("anew amail from user")
                                    output.writeUTF("server 250: "+user+" sender ok");
                                    output.writeUTF("server: recipt to");//////
                                    String recipt=input.readUTF();////////to recive recipt to:email
                                    output.writeUTF("server: 250 "+recipt+" Reciptance ok");
                                    int length =recipt.length();               ////////////    to get the name ofthe recipytance server 
                                    int index =(recipt.indexOf("@"))+1;          ////////////    to get the name ofthe recipytance server 
                                    int in=length-index;                             ////////////    to get the name ofthe recipytance server 
                                    char[] reciptserver=new char[in];                        ////////////    to get the name ofthe recipytance server 
                                    for (int j=0;j<in;j++)                           ////////////    to get the name ofthe recipytance server 
                                    {
                                        reciptserver[j]= recipt.charAt(index);           ////////////    to get the name ofthe recipytance server 
                                        index++;                                     ////////////    to get the name ofthe recipytance server 
                                    }
                                    ////////////
                                    String m=valueOf(reciptserver);
                                    System.out.println(input.readUTF());//////recive DATA
                                    output.writeUTF("Server: Please enter the body of your email ended by ‘&&&‘");
                                    FileWriter Write = new FileWriter("D:\\java work\\"+m+"\\"+recipt+"\\inbox.txt");
                                    String email=" ";
                                    while (!email.equalsIgnoreCase("&&&"))
                                    { 
                                        email=input.readUTF();
                                        Write.write(email+"\n");
                                    }
                                     Write.close();
                                    output.writeUTF("Server: 250 Message accepted for delivery \nPlease choose ‘SEND’ or ‘QUIT");
                                    mail=input.readUTF();
                                  } 
                                    output.writeUTF("Server: 220 closing connection");
                                    clientsocket.close();                          /* login option endddddddddddddddddddddddddddddddddddddddddddddddd */
                              }
                              else if (option.equalsIgnoreCase("register"))
                              {
                                    String user=input.readUTF();/////////to recive user from client
                                    String password= input.readUTF();////////to recive password from client
                                    String message=input.readUTF();/////to recive ("hello user")
                                    System.out.println(user+"\n"+password);
                                    System.out.println(message);
                                    FileWriter Writer = new FileWriter("D:\\java work\\"+servername+"\\credentials.txt",true);
                                    Writer.write("user name: "+user+" "+"password: "+password+"\n");
                                    Writer.close();
                                    File f2 = new File("D:\\java work\\"+servername+"\\"+user);
                                    f2.mkdir();
                                    if (!f2.exists())
                                        {
                                             f2.createNewFile();
                                        }
                                    File f1 = new File("D:\\java work\\"+servername+"\\"+user+"\\inbox.txt");
                                    if (!f1.exists())
                                        {
                                             f1.createNewFile();
                                        }
                                    File f3 = new File("D:\\java work\\"+servername+"\\"+user+"\\outbox.txt");
                                    if (!f3.exists())
                                        {
                                             f3.createNewFile();
                                        }
                                    output.writeUTF("server: 250 Hello "+user+" pleased to meet you");////////
                                    
                                    String mail=input.readUTF(); //////recive send or quite
                                    while (mail.equalsIgnoreCase("send"))
                                    {
                                    System.out.println(input.readUTF());///////// to recive("anew amail from user")
                                    output.writeUTF("server 250: "+user+" sender ok");
                                    output.writeUTF("server: recipt to");//////
                                    String recipt=input.readUTF();////////to recive recipt to email
                                    output.writeUTF("server: 250 "+recipt+" Reciptance ok");
                                   /////////////
                                    int length =recipt.length();
                                    int index =(recipt.indexOf("@"))+1;
                                    int in=length-index;
                                    char[] reciptserver=new char[in];
                                    for (int j=0;j<in;j++)
                                    {
                                        reciptserver[j]= recipt.charAt(index);
                                        index++;
                                    }
                                    ////////////
                                    String m=valueOf(reciptserver);
                                    System.out.println(reciptserver);
                                    System.out.println(input.readUTF());//////recive ("DATA")
                                    output.writeUTF("Server: Please enter the body of your email ended by ‘&&&‘");
                                    FileWriter Write = new FileWriter("D:\\java work\\"+m+"\\"+recipt+"\\inbox.txt",true);
                                    FileWriter writer = new FileWriter("D:\\java work\\"+servername+"\\"+user+"\\outbox.txt",true);
                                    String email=" ";
                                    while (!email.equalsIgnoreCase("&&&"))
                                    { 
                                        email=input.readUTF();
                                        Write.write(email+"\n");////////////to save in inbox
                                        writer.write(email+"\n");/////////////////to save in outbox
                                    }
                                    Write.close();
                                    writer.close();
                                    output.writeUTF("Server: 250 Message accepted for delivery \nPlease choose ‘SEND’ or ‘QUIT");
                                    mail=input.readUTF();
                                  } 
                                    output.writeUTF("Server: 220 closing connection");
                                    clientsocket.close();
                              }
                              else if(option.equalsIgnoreCase("quite"))
                               {
                                  clientsocket.close();
                               }
                          }
                      }catch(Exception e)
                            {
                                e.printStackTrace();
                                System.out.println("error occuerd"+clientsocket+" ");
                            }
                }
            }
}